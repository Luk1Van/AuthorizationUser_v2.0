// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using User.DbContext;

#nullable disable

namespace User.DbContext.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20230522221321_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("User.DataModel.user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("user_group_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_state_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("id")
                        .IsUnique();

                    b.HasIndex("user_group_id");

                    b.HasIndex("user_state_id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            created_date = new DateTime(2009, 6, 15, 13, 45, 30, 0, DateTimeKind.Utc),
                            login = "Capybara",
                            password = "123456",
                            user_group_id = 1,
                            user_state_id = 1
                        },
                        new
                        {
                            id = 2,
                            created_date = new DateTime(2009, 6, 15, 13, 45, 30, 0, DateTimeKind.Utc),
                            login = "Elephant",
                            password = "123456",
                            user_group_id = 1,
                            user_state_id = 1
                        },
                        new
                        {
                            id = 3,
                            created_date = new DateTime(2009, 6, 15, 13, 45, 30, 0, DateTimeKind.Utc),
                            login = "Monkey",
                            password = "123456",
                            user_group_id = 1,
                            user_state_id = 1
                        });
                });

            modelBuilder.Entity("User.DataModel.user_group", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("id")
                        .IsUnique();

                    b.ToTable("user_Groups");

                    b.HasData(
                        new
                        {
                            id = 1,
                            code = "User",
                            description = "Regular user"
                        },
                        new
                        {
                            id = 2,
                            code = "Admin",
                            description = "Admin"
                        });
                });

            modelBuilder.Entity("User.DataModel.user_state", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("id")
                        .IsUnique();

                    b.ToTable("user_States");

                    b.HasData(
                        new
                        {
                            id = 1,
                            code = "Active",
                            description = "Active user"
                        },
                        new
                        {
                            id = 2,
                            code = "Blocked",
                            description = "Blocked user"
                        });
                });

            modelBuilder.Entity("User.DataModel.user", b =>
                {
                    b.HasOne("User.DataModel.user_group", "_Group")
                        .WithMany("userG")
                        .HasForeignKey("user_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User.DataModel.user_state", "_State")
                        .WithMany("userS")
                        .HasForeignKey("user_state_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Group");

                    b.Navigation("_State");
                });

            modelBuilder.Entity("User.DataModel.user_group", b =>
                {
                    b.Navigation("userG");
                });

            modelBuilder.Entity("User.DataModel.user_state", b =>
                {
                    b.Navigation("userS");
                });
#pragma warning restore 612, 618
        }
    }
}
